<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<rfc ipr="trust200902"
     docName="draft-flm-keylist-sync-01">
  <!-- TODO: We should verify that 'trust200902' is the intellectual property designation we want. ~MM -->
  <front>
    <!-- Working title. We'll want something that more accurately frames the system before we submit. It never also hurts to have a more catchy title... -->
    <title abbrev="OpenPGP Keylist Subscriptions">
      Safely Distributing OpenPGP Keys with Keylist Subscriptions
    </title>
    <!-- I don't care about the order of authors. Note that IETF consisters all named authors to have contributed equally. Feel free to reorder if you'd like. -->
    <author initials="M.M."
            surname="McCain"
            fullname="R. Miles McCain">
      <organization abbrev="FLM">First Look Media</organization>
      <address>
        <email>ietf@sendmiles.email</email>
        <uri>https://rmrm.io</uri>
      </address>
    </author>
    <author initials="M.L."
            surname="Lee"
            fullname="Micah F. Lee">
      <organization abbrev="TI">The Intercept</organization>
      <address>
        <email>micah.lee@theintercept.com</email>
        <uri>https://micahflee.com/</uri>
      </address>
    </author>
    <date month="July"
          year="2018" />
    <area>Security</area>
    <!-- Given that 'key management' is listed as a critical category of the 'Security' area, I believe that this I-D is best suited for the 'Security' area. ~MM -->
    <keyword>OpenPGP</keyword>
    <keyword>GPGSync</keyword>
    <keyword>GPG</keyword>
    <keyword>Keylist</keyword>
    <abstract>
      <t>This document specifies a system by which clients may subscribe to an organization's
        keylist to keep its internal keystore up-to-date. Ensuring that all members
        of an organization have their colleagues' most recent PGP public keys is
        critical to maintaining operational security. To enable cross-client compatibility,
        this document proposes a standard format for the keylist file as well as
        feature requirements for clients who wish to implement keylist subscription
        functionality.
      </t>
      <!-- We'll want to tighten this abstract up a bit... ~MM -->
    </abstract>
  </front>
  <middle>
    <section anchor="intro"
             title="Introduction">
      <t>This document specifies a system by which clients may subscribe to cryptographically
        signed keylists. This system allows for seamless key rotation across entire
        organizations and enhances operational security. To enable cross-client compatibility,
        this document provides a standard format for the keylist, its cryptographic
        verification, and the method by which it is retreived by the client. The
        user interface by which a client provides this functionality to the user
        is out of scope, as is the process by which the client retrieves public keys.
        Other non-security-related implementation details are also out of scope.
      </t>
      <section anchor="notation"
               title="Requirements Notation">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
          "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are
          to be interpreted as described in [RFC2119].
        </t>
      </section>
      <section anchor="terminology"
               title="Terminology">
        <t>This document uses the terms "OpenPGP", "public key", "private key", "signature",
          "keystore", and "fingerprint" defined by OpenPGP Message Format [RFC4880].
        </t>
        <!-- TODO: verify that all the previous terms are actually defined in RFC4880. ~MM -->
        <!-- TODO: does 'URI' and 'Internet' need a citation? Probably not, but we should check. ~MM -->
        <t>The term "keylist" is defined as a list of OpenPGP public keys identified
          by their fingerprints accessible via a URI. The exact format of this data
          is specified in "Data Element Formats".</t>
        <!-- TODO: find out how to hyperlink sections. ~ MM -->
        <!-- TODO: I avoid using the word 'file' here as it has a nuanced meaning and really we're just talking about data accessible via a URI. Is there a term other than 'data' that is appropriate here? ~MM -->
        <t>An "authority key" is defined as the OpenPGP used to sign a particular keylist.
          Every keylist has a corresponding authority key, and every authority key
          has at least one corresponding keylist. For security purposes, a single
          authority key SHOULD NOT be used to sign multiple keylists.
        </t>
        <t>To be "subscribed" to a keylist means that a program will retreive that keylist
          on a regular interval and subsequently perform an update to an internal
          OpenPGP keystore.</t>
        <!-- TODO: This needs to be cleaned/tightened. ~MM -->
        <t>A "client" is a program that allows the user to subscribe to keylists. A
          client may be an OpenPGP client itself or a separate program that interfaces
          with an OpenPGP client to update its keystore.</t>
      </section>
    </section>
    <section anchor="functions"
             title="Functions and Procedures">
      <t>As new keys are created and other keys are revoked, it is critical that all
        members of an organization have the most recent set of keys available on
        their computers. Keylists enable organizations to publish a directory of
        OpenPGP keys that clients can use to keep their internal keystores up-to-date.
      </t>
      <section anchor="keylist-subscribe"
               title="Subscribing to Keylists">
        <t>A single client may subscribe to many different keylists, or none at all.
          When an client first subscribes to a keylist, it SHOULD update or import
          every key present in the keylist. Keylist subscriptions SHOULD be persistent--that
          is, they should be permanently stored by the client to enable future automatic
          updates.
        </t>
        <t>To subscribe to a keylist, the client must be aware of the keylist URI, the
          keylist's signature URI, and the fingerprint of the authority key used
          to sign the keylist. The protocol used to retrieve the keylist and its
          signature SHOULD be HTTPS, however other implementation are possible. A
          client implementing keylist functionality MUST support the retrieval of
          keylists and signatures over HTTPS, but no other protocols are required.</t>
        <t>An client MUST NOT employ a trust-on-first-use model for determining the
          fingerprint of the authority key; it must be explicitly provided by the
          user.
        </t>
        <t>The process by which the client stores its keylist subscriptions to a keylist
          is out of scope, as is the means by which subscription functionality is
          exposed to the end-user.</t>
      </section>
      <section anchor="keylist-update"
               title="Periodic Updates">
        <t>The primary purpose of keylists is to enable periodic updates of OpenPGP
          clients' internal keystores. We RECOMMEND that clients provide a default
          refresh interval of less than one day, however we also RECOMMEND that client
          s allow the user to select this interval. The exact time at which updates
          are performed is not critical.</t>
        <t>To perform an update, the client MUST perform the following steps. They SHOULD
          be performed in the given order.</t>
        <t>
          <list style="numbers">
            <t>Obtain a current copy of the keylist.</t>
            <t>Obtain a current copy of the keylist's signature data.</t>
            <!-- I say 'obtain' rather than retrieve because I want to leave open the possibility of a client checking to see if the hash of the file, for example, has changed, and only re-requesting if it has. 'Obtain' is also very ambiguous, though, so it may be to our advantage to use something more specific or explain this rationale outright. ~MM -->
            <t>Verify that the keylist's signature matches the keylist data. If the
              signature does not match, the client MUST abort the update and SHOULD
              alert the user.
            </t>
            <t>For each key listed in the keyfile, either refresh it from the keyserver
              if a copy of the public key is already present in the client's local
              keystore or retrieve it from the keyserver if it is not already present.
              The method by which keys are retrieved and updated is out of scope.</t>
            <!-- TODO: Is it overkill to establish some concept of a 'linked keystore' as the keystore that the client interacts with and keeps updated? This is a potential ambiguity for machines with multiple keystores. ~MM -->
            <!-- TODO: Should anything else be in this list? ~MM -->
          </list>
        </t>
      </section>
      <section anchor="keylist-crypto"
               title="Cryptographic Verification of Keylists">
        <!-- TODO -->
      </section>
    </section>
    <section anchor="formats"
             title="Data Element Formats">
      <!-- TODO -->
      <section anchor="terms"
               title="Keylist File">
        <!-- TODO -->
      </section>
      <section anchor="sigfile"
               title="Signature File">
        <!-- TODO -->
      </section>
    </section>
    <section anchor="retrieval"
             title="Data Retrieval">
      <!-- TODO -->
    </section>
    <!-- ... body text ... -->
    <section anchor="securityconsiderations"
             title="Security Considerations">
      <t>
        <!-- TODO, see https://tools.ietf.org/html/bcp72 -->
      </t>
    </section>
    <!-- TODO: other elements -->
  </middle>
  <back></back>
</rfc>
